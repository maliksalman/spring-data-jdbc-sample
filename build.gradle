plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.graalvm.buildtools.native' version '0.10.6'
}

group = 'com.samples'
version = '1.0'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// starter for spring MVC web application
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// starters for spring-data-jdbc (with apache-dbcp2 connection pooling)
	implementation 'org.apache.commons:commons-dbcp2'
	implementation('org.springframework.boot:spring-boot-starter-data-jdbc') {
		exclude group: 'com.zaxxer', module: 'HikariCP'
	}

	// needed to bind to services when deployed in TAS/CloudFoundry
	implementation 'io.pivotal.cfenv:java-cfenv-boot:3.3.0'

	// automatically exposes OpenAPI swagger documentation for APIs
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// needed to maintain DB schema changes as code
	implementation 'org.liquibase:liquibase-core'

	// 1. JDBC drivers, usually only one is needed, 3 here for demo purposes
	// 2. To force boot to pickup all these drivers during nativeCompile, they
	//    are marked as `implementation` instead of `runtimeOnly`
	implementation 'com.h2database:h2'
	implementation 'com.mysql:mysql-connector-j'
	implementation 'org.postgresql:postgresql'
	implementation 'com.oracle.database.jdbc:ojdbc11'

	// project-lombok to remove boiler-plate java code
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}
